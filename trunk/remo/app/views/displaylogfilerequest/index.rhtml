<% rid = get_check_logfile_requestid(@r[:method], @r[:path]) -%>
<% failed_mandatory_parameters = check_mandatory_parameters(@r, rid) -%>
<h1 class="<%= unless rid.nil? 
                 "passed" 
               else 
                "failed" 
               end -%>"><div><%= h(@r[:method]) -%> <%= h(@r[:path]) -%></div></h1>

<% if check_logfile_request(@r) -%>
  <div class="item passed">
    <div class="item-name">The request <b>passes</b> the present ruleset.</div>
  </div>
<% elsif rid.nil? %>
  <div class="item failed">
    <div class="item-name">The request <b>fails</b> against the present ruleset. The path is not defined in the ruleset and/or the
    method given is not covered.</div>
  </div>
<% else %>
  <div class="item failed">
    <div class="item-name">The request <b>fails</b> against the present ruleset due to one or multiple parameters.</div>
  </div>
<% end %>

&nbsp;<p />

<div class="item">
  <div class="item-name"><b>File, Request number</b>:&nbsp;&nbsp;</div>
  <div class="item-value"><%= h(@r[:filename])-%>, #<%= h(@r[:num]) -%></div>
</div>

<div class="item">
  <div class="item-name"><b>Status</b>:&nbsp;&nbsp;</div>
  <div class="item-value"><%= h(@r[:status]) -%> <%= h(@r[:status_message]) -%></div>
</div>
<div class="item">
  <div class="item-name"><b>ModSecurity Messages</b>:&nbsp;&nbsp;</div>
</div>
<div class="item">
  <% @r[:modsec_messages].each do |item| -%>
  <div class="item-value"><%= h(item) -%></div>
  <% end %>
</div>

<p />&nbsp;<p />

<% unless rid.nil? %>
<div class="item <%= unless failed_mandatory_parameters.size > 0
                 "passed" 
               else 
                "failed" 
               end -%>">
  <div class="item-name">Missing mandatory parameters:&nbsp;&nbsp;</div>
  <div class="item-value"><%= 
    unless failed_mandatory_parameters.size > 0
      "None. All mandatory parameters present."
    else
      string = ""
      failed_mandatory_parameters.each do |item|
        string += ", " unless string.size == 0
        string += item
      end
      string += "."
      string
    end
    
    -%></div>
</div>
<% end %>

<h3>Headers</h3>
<% @r[:headers].each do |name, value| -%>
<div class="item <%= check_logfile_request_parameter(Header, rid, name, value) -%>">
  <div class="item-name"><%= h(name) -%>:&nbsp;&nbsp;</div>
  <div class="item-value"><%= h(value) -%></div>
</div>
<% end %>

<h3>Cookie Parameters</h3>
<% @r[:cookieparameters].each do |name, value| -%>
<div class="item <%= check_logfile_request_parameter(Cookieparameter, rid, name, value) -%>">
  <div class="item-name"><%= h(name) -%>:&nbsp;&nbsp;</div>
  <div class="item-value"><%= h(value) -%></div>
</div>
<% end %>

<h3>Querystring Parameters</h3>
<% @r[:querystringparameters].each do |name, value| -%>
<div class="item <%= check_logfile_request_parameter(Querystringparameter, rid, name, value) -%>">
  <div class="item-name"><%= h(name) -%>:&nbsp;&nbsp;</div>
  <div class="item-value"><%= h(value) -%></div>
</div>
<% end %>

<h3>Post Parameters</h3>
<% @r[:postparameters].each do |name, value| -%>
<% if name or value %>
<% # rails tends add an empty parameter to imported logfiles %>
<% # with 0 content-length and no post-parameter. This is a workaround. %>
<div class="item <%= check_logfile_request_parameter(Postparameter, rid, name, value) -%>">
  <div class="item-name"><%= h(name) -%>:&nbsp;&nbsp;</div>
  <div class="item-value"><%= h(value) -%></div>
</div>
<% end %>
<% end %>
