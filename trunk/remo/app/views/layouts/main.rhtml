<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN"
                      "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head>
  <title>REMO - rule editor for modsecurity</title>
  <%= stylesheet_link_tag "remo", :media => "all" %>
<%= javascript_include_tag :defaults %>
<%= javascript_include_tag "in_place_select_editor" %>
<script type="text/javascript">

function getelementheight(id) 
{   
  return document.getElementById(id).offsetHeight;
}
function getwindowheight() 
{
  // taken from http://www.howtocreate.co.uk/tutorials/javascript/browserwindow
  var myHeight = 0;
  if( typeof( window.innerWidth ) == 'number' ) {
    //Non-IE
    myHeight = window.innerHeight;
  } else if( document.documentElement && ( document.documentElement.clientWidth || document.documentElement.clientHeight ) ) {
    //IE 6+ in 'standards compliant mode'
    myHeight = document.documentElement.clientHeight;
  } else if( document.body && ( document.body.clientWidth || document.body.clientHeight ) ) {
    //IE 4 compatible
    myHeight = document.body.clientHeight;
  }
  return myHeight;
}
function getnewmainareaheight()
{
  // calculate the new height of the two mainareas
  var winheight = 0, divheightsources = 0, divheightrules = 0, sortlistheight = 0, sourcerequestsheight=0, requestheaders, requestdetails;
  winheight = getwindowheight();
  divheightrules = winheight - 97 - getelementheight('flash-frame') - getelementheight('rules-statusarea') - getelementheight('rules-toolsetarea');
  divheightsources = winheight - 97 - getelementheight('flash-frame') - getelementheight('source-statusarea') - getelementheight('source-toolsetarea');

  sourcerequestsheight = getelementheight('source-mainarea-content');

    // The requests div height does not include the header and the details of the last list (ul) element.
    // So the last element has to be added seperately
  requestheaders = document.getElementsByClassName('requesthead');
  requestdetails = document.getElementsByClassName('requestdetails');
  if (requestheaders.length > 0) {
    lastelementheight = requestheaders[requestheaders.length-1].offsetHeight + requestdetails[requestdetails.length-1].offsetHeight;
  }
  else {
    lastelementheight = 0
  }

  sortlistheight =  getelementheight('rules-mainarea-sortlist') + lastelementheight;

  return Math.max(divheightsources, sourcerequestsheight, sortlistheight, divheightrules)
}
function adjustdivheight() 
{   
  // set the height of the two mainareas depending on the window height and their content height
  var divheight = 0;
  divheight = getnewmainareaheight();
  document.getElementById('rules-mainarea').style.height = divheight + "px";
  document.getElementById('source-mainarea').style.height = divheight + "px";
}
function toggleRequestDetails(id)
{
  Element.toggle('request-item_' + id + '-details');
  Element.toggle('request-item_' + id + '-collapsed');
  Element.toggle('request-item_' + id + '-expanded');
  adjustdivheight();
  return false;
}
function toggleRequestHeaders(id)
{
  Element.toggle('request-item_' + id + '_headers_body');
  Element.toggle('request-item_' + id + '_headers-collapsed');
  Element.toggle('request-item_' + id + '_headers-expanded');
  adjustdivheight();
  return false;
}
function toggleRequestPostparameters(id)
{
  Element.toggle('request-item_' + id + '_postparameters_body'); 
  Element.toggle('request-item_' + id + '_postparameters-collapsed');
  Element.toggle('request-item_' + id + '_postparameters-expanded');
  adjustdivheight();
  return false;
}
function toggleRequestQuerystringparameters(id)
{
  Element.toggle('request-item_' + id + '_querystringparameters_body'); 
  Element.toggle('request-item_' + id + '_querystringparameters-collapsed');
  Element.toggle('request-item_' + id + '_querystringparameters-expanded');
  adjustdivheight();
  return false;
}
function toggleRequestCookieparameters(id)
{
  Element.toggle('request-item_' + id + '_cookieparameters_body'); 
  Element.toggle('request-item_' + id + '_cookieparameters-collapsed');
  Element.toggle('request-item_' + id + '_cookieparameters-expanded');
  adjustdivheight();
  return false;
}
function toggleRequestParameterDetails(type, id)
{
  Element.toggle('request-' + type + '-' + id + '-details');
  Element.toggle('request-' + type + '-' + id + '-collapsed');
  Element.toggle('request-' + type + '-' + id + '-expanded');
  adjustdivheight();
  return false;
}
function openPopup(url) {
  window.open(url, "popup_id", "resizable,width=500,height=150");
  return false;
}
</script>
</head>

<body id="remo" onload="javascript:adjustdivheight()">
  <div id="banner" class="header">
    <div id="title"><h1><a href="http://remo.netnea.com">remo</a> - rule editor for <a href="http://www.modsecurity.org">modsecurity</a></h1><span class="remo-version">Release <%= get_release_version -%></span></div>
    <div id="logodiv" align="right"><a href="http://remo.netnea.com"><img id="logo" src="/images/logo.png"/></a></div>
  </div>
  <div id="flash-frame">
    <div id="flash-notice" class="<%= if flash[:ok] then "flash-ok" else "flash-nok" end %>" style="display: <%= if flash[:notice].nil? then "none" else "inline" end %>;">
      <%= flash[:notice] -%>
    </div>
  </div>
  <div id="maindiv">
    <div id="source" class="maincolumn">
      <div id="source-toolsetarea" class="toolsetarea">
        <div id="source-toolsetarea-content">
        <%= render(:partial => "source_toolset", :collection => @source_toolset_buttons) -%>
        </div>
      </div>
      <div id="source-mainarea" class="mainarea">
        <% unless @logfile.nil? %>
        <div id="source-mainarea-content">
          <pre>
<%= @logfile.content -%>
          </pre>
        </div>
        <% else %>
        <div id="source-mainarea-content">
          <% if @logfiles.length > 0 %>
            <%= render(:partial => "logfile", :collection => @logfiles) -%>
          <% else %>
            Logfile area. Import logfile to display it here.
          <% end %>
        </div>
        <% end %>
      </div>
      <div id="source-statusarea" class="statusarea">
        Status: active
      </div>
    </div>
    <div id="rules" class="maincolumn">
      <div id="rules-toolsetarea" class="toolsetarea">
        <%= render(:partial => "rules_toolset", :collection => @rules_toolset_buttons) -%>
      </div>
      <div id="rules-mainarea" class="mainarea">
      <%= yield :layout %>
      </div>
      <div id="rules-statusarea" class="statusarea">
        <div><%= h(@rules_status) %></div>
      </div>
    </div>
  </div>
</body>
</html>

