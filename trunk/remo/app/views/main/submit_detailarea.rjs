require "#{RAILS_ROOT}/app/views/main/lib/display"

# handle flash notice div. flash[:before] is written in the main controller
if flash[:notice].nil? and ! flash[:before].nil?        
  page["flash-notice"].visual_effect :blind_up        # no error anymore
elsif ! flash[:notice].nil? and flash[:before].nil?  
  page["flash-notice"].visual_effect :blind_down      # new error
elsif ! flash[:notice].nil? and ! flash[:before].nil? 
  page["flash-notice"].visual_effect :highlight      # new error
end

page.replace_html("flash-notice", "<div>#{flash[:notice]}</div>")

#
# The Rules Request Detailarea has 2 forms according to http://remo.netnea.com/twiki/bin/view/Main/Task14Start
# - Empty form in order to add a new request 
#   It's possible, that an "add" request failed. Thus displaying the non-saved item instead of the empty form
# - Displaying an existing request
if params[:actionflag] == "clear" ||                            # clear requested
  (params[:actionflag] == "delete" && flash[:notice].nil? ) ||  # delete requested and it worked
  (params[:actionflag] == "add" && ! flash[:notice].nil? )      # add requested, but it did not work

  page.replace_html("requestitem", :partial => "request_rules_detailarea_empty", :object => @detail_request)
else
  page.replace_html("requestitem", :partial => "request_rules_detailarea_detailrequest", :object => @detail_request)
end

statusmessage = flash[:notice]

case params[:actionflag]
when "clear"
  statusmessage = "Status: active" if flash[:notice].nil?

  unselect_listitem page, 'listitem'

when "add"
  statusmessage = "Successfully added new item!" if flash[:notice].nil?
when "save"
  statusmessage = "Successfully saved item #{params[:update_id]}!" if flash[:notice].nil?
when "delete"
  statusmessage = "Successfully deleted item #{params[:update_id]}!" if flash[:notice].nil?
end

page.replace_html("rules-statusarea", "<div>#{statusmessage}</div>" )
page.replace_html("rules-mainarea-sortlist", :partial => "request", :collection => @requests) unless params[:actionflag] == "clear"
page.sortable 'rules-mainarea-sortlist', :url => {:action => "rearrange_requests"} unless params[:actionflag] == "clear"
