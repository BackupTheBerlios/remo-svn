


  
    
  
  

# allow: POST /submit.php (request id / rule group 4)
# Actiontest POST
<LocationMatch "^/submit.php$">
  # Checking request method
  SecRule REQUEST_METHOD "!^POST$" "t:none,deny,id:4,status:501,severity:3,msg:'Request method wrong (it is not POST).'"

  # Strict headercheck (make sure the request contains only predefined request headers)
  SecRule REQUEST_HEADERS_NAMES "!^(Referer|Host|User-Agent|Cookie|Accept|Content-Type|Content-Length|Expect)$" "t:none,deny,id:4,status:501,severity:3,msg:'Strict headercheck: At least one request header is not predefined for this path.'"

  # Checking header "Referer"
  SecRule REQUEST_HEADERS:Referer "!^(.*)$" "t:none,deny,id:4,status:501,severity:3,msg:'Header Referer failed validity check.'"
  # Checking header "Host"
  SecRule REQUEST_HEADERS:Host "!^(.*)$" "t:none,deny,id:4,status:501,severity:3,msg:'Header Host failed validity check.'"
  # Checking header "User-Agent"
  SecRule REQUEST_HEADERS:User-Agent "!^(.*)$" "t:none,deny,id:4,status:501,severity:3,msg:'Header User-Agent failed validity check.'"
  # Checking header "Cookie"
  SecRule REQUEST_HEADERS:Cookie "!^(.*)$" "t:none,deny,id:4,status:501,severity:3,msg:'Header Cookie failed validity check.'"
  # Checking header "Accept"
  SecRule REQUEST_HEADERS:Accept "!^(.*)$" "t:none,deny,id:4,status:501,severity:3,msg:'Header Accept failed validity check.'"
  # Checking header "Content-Type"
  SecRule REQUEST_HEADERS:Content-Type "!^(.*)$" "t:none,deny,id:4,status:501,severity:3,msg:'Header Content-Type failed validity check.'"
  # Checking header "Content-Length"
  SecRule REQUEST_HEADERS:Content-Length "!^(\d*)$" "t:none,deny,id:4,status:501,severity:3,msg:'Header Content-Length failed validity check.'"
  # Checking header "Expect"
  SecRule REQUEST_HEADERS:Expect "!^(.*)$" "t:none,deny,id:4,status:501,severity:3,msg:'Header Expect failed validity check.'"

  # Strict cookieparametercheck (make sure the request contains only predefined request cookieparameters)
  SecRule REQUEST_COOKIES_NAMES "!^(c_session)$" "t:none,deny,id:4,status:501,severity:3,msg:'Strict cookieparametercheck: At least one request cookieparameter is not predefined for this path.'"

  # Checking cookie "c_session"
  SecRule &REQUEST_COOKIES:c_session "@eq 0" "t:none,deny,id:4,status:501,severity:3,msg:'Cookie c_session is mandatory, but it is not present in request.'"
  SecRule REQUEST_COOKIES:c_session "!^(\d{8})$" "t:none,deny,id:4,status:501,severity:3,msg:'Cookie c_session failed validity check.'"

  # Strict argumentcheck (make sure the request contains only predefined request arguments)
  SecRule ARGS_NAMES "!^(qp_single_integer|p_single_integer|p_single_integer_or_empty|p_empty|p_exotic|p_single_letter|p_string_long|qp_single_integer|p_string_extremely_long|p_string_really_long|p_numeric_id_\d)$" "t:none,deny,id:4,status:501,severity:3,msg:'Strict argumentcheck: At least one request parameter is not predefined for this path.'"

  # Checking querystringparameter "qp_single_integer"
  SecRule ARGS:qp_single_integer "!^(\d)$" "t:none,deny,id:4,status:501,severity:3,msg:'Querystringparameter qp_single_integer failed validity check.'"
  # Checking postparameter "p_single_integer"
  SecRule QUERY_STRING "^p_single_integer[=&]|^p_single_integer$" "t:none,deny,id:4,status:501,severity:3,msg:'Postparameter p_single_integer is present in query string. This is illegal.'"
  SecRule ARGS:p_single_integer "!^(\d)$" "t:none,deny,id:4,status:501,severity:3,msg:'Postparameter p_single_integer failed validity check.'"
  # Checking postparameter "p_single_integer_or_empty"
  SecRule QUERY_STRING "^p_single_integer_or_empty[=&]|^p_single_integer_or_empty$" "t:none,deny,id:4,status:501,severity:3,msg:'Postparameter p_single_integer_or_empty is present in query string. This is illegal.'"
  SecRule ARGS:p_single_integer_or_empty "!^(\d{0,1})$" "t:none,deny,id:4,status:501,severity:3,msg:'Postparameter p_single_integer_or_empty failed validity check.'"
  # Checking postparameter "p_empty"
  SecRule QUERY_STRING "^p_empty[=&]|^p_empty$" "t:none,deny,id:4,status:501,severity:3,msg:'Postparameter p_empty is present in query string. This is illegal.'"
  SecRule ARGS:p_empty "!^(.{0})$" "t:none,deny,id:4,status:501,severity:3,msg:'Postparameter p_empty failed validity check.'"
  # Checking postparameter "p_exotic"
  SecRule QUERY_STRING "^p_exotic[=&]|^p_exotic$" "t:none,deny,id:4,status:501,severity:3,msg:'Postparameter p_exotic is present in query string. This is illegal.'"
  SecRule ARGS:p_exotic "!^([\x00\x01\x02\x03\x04\x05\x06\x07\x08\x09\x0A\x0B\x0C\x0D\x0E\x0F\x10\x11\x12\x13\x14\x15\x16\x17\x18\x19\x1A\x1B\x1C\x1D\x1E\x1F\x20\x21\x22\x23\x24\x25\x26\x27\x28\x29\x2A\x2B\x2C\x2D\x2E\x2F\x3A\x3B\x3C\x3D\x3E\x3F\x40\x5B\x5C\x5D\x5E\x5F\x60\x7B\x7C\x7D\x7E\x7F])$" "t:none,deny,id:4,status:501,severity:3,msg:'Postparameter p_exotic failed validity check.'"
  # Checking postparameter "p_single_letter"
  SecRule QUERY_STRING "^p_single_letter[=&]|^p_single_letter$" "t:none,deny,id:4,status:501,severity:3,msg:'Postparameter p_single_letter is present in query string. This is illegal.'"
  SecRule ARGS:p_single_letter "!^(\w)$" "t:none,deny,id:4,status:501,severity:3,msg:'Postparameter p_single_letter failed validity check.'"
  # Checking postparameter "p_string_long"
  SecRule QUERY_STRING "^p_string_long[=&]|^p_string_long$" "t:none,deny,id:4,status:501,severity:3,msg:'Postparameter p_string_long is present in query string. This is illegal.'"
  SecRule ARGS:p_string_long "!^([\w ]{0,1024})$" "t:none,deny,id:4,status:501,severity:3,msg:'Postparameter p_string_long failed validity check.'"
  # Checking postparameter "qp_single_integer"
  SecRule ARGS:qp_single_integer "!^(\d)$" "t:none,deny,id:4,status:501,severity:3,msg:'Postparameter qp_single_integer failed validity check.'"
  # Checking postparameter "p_string_extremely_long"
  SecRule QUERY_STRING "^p_string_extremely_long[=&]|^p_string_extremely_long$" "t:none,deny,id:4,status:501,severity:3,msg:'Postparameter p_string_extremely_long is present in query string. This is illegal.'"
  SecRule ARGS:p_string_extremely_long "!^([\w\x20]{0,65535})$" "t:none,deny,id:4,status:501,severity:3,msg:'Postparameter p_string_extremely_long failed validity check.'"
  # Checking postparameter "p_string_really_long"
  SecRule QUERY_STRING "^p_string_really_long[=&]|^p_string_really_long$" "t:none,deny,id:4,status:501,severity:3,msg:'Postparameter p_string_really_long is present in query string. This is illegal.'"
  SecRule ARGS:p_string_really_long "!^([\w\x20]{0,10240})$" "t:none,deny,id:4,status:501,severity:3,msg:'Postparameter p_string_really_long failed validity check.'"
  # Checking postparameter "p_numeric_id_\d"
  SecRule QUERY_STRING "^p_numeric_id_\d[=&]|^p_numeric_id_\d$" "t:none,deny,id:4,status:501,severity:3,msg:'Postparameter p_numeric_id_d is present in query string. This is illegal.'"
  SecRule ARGS:/p_numeric_id_\d/ "!^(\d)$" "t:none,deny,id:4,status:501,severity:3,msg:'Postparameter p_numeric_id_d failed validity check.'"

  # All checks passed for this path. Request is allowed.
  SecAction "allow,id:4,t:none,msg:'Request passed all checks, it is thus allowed.'"
</LocationMatch>


  

