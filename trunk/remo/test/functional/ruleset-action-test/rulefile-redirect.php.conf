


  
    
  
  

# allow: GET /redirect.php (request id / rule group 5)
# Actiontest GET
<LocationMatch "^/redirect.php$">
  # Checking request method
  SecRule REQUEST_METHOD "!^(GET|GET)$" "t:none,deny,id:5,status:501,severity:3,msg:'Request method wrong (it is not one of GET|GET).'"

  SecRule REQUEST_METHOD "^GET$" "t:none,pass,skip:16"
  SecRule REQUEST_METHOD "^GET$" "t:none,pass,skip:16"

  # skip-destination for http_method GET
  # Strict headercheck (make sure the request contains only predefined request headers)
  SecRule REQUEST_HEADERS_NAMES "!^(Referer|Host|User-Agent|Cookie|Accept)$" "t:none,deny,id:5,status:501,severity:3,msg:'Strict headercheck: At least one request header is not predefined for this path.'"
  # Checking header "Referer"
  SecRule REQUEST_HEADERS:Referer "!^(.*)$" "t:none,deny,id:5,status:501,severity:3,msg:'Header Referer failed validity check. Value domain: Custom.'"
  # Checking header "Host"
  SecRule REQUEST_HEADERS:Host "!^(.*)$" "t:none,deny,id:5,status:501,severity:3,msg:'Header Host failed validity check. Value domain: Custom.'"
  # Checking header "User-Agent"
  SecRule REQUEST_HEADERS:User-Agent "!^(.*)$" "t:none,deny,id:5,status:501,severity:3,msg:'Header User-Agent failed validity check. Value domain: Custom.'"
  # Checking header "Cookie"
  SecRule REQUEST_HEADERS:Cookie "!^(.*)$" "t:none,deny,id:5,status:501,severity:3,msg:'Header Cookie failed validity check. Value domain: Custom.'"
  # Checking header "Accept"
  SecRule REQUEST_HEADERS:Accept "!^(.*)$" "t:none,deny,id:5,status:501,severity:3,msg:'Header Accept failed validity check. Value domain: Custom.'"

  # Strict cookieparametercheck (make sure the request contains only predefined request cookieparameters)
  SecRule REQUEST_COOKIES_NAMES "!^(c_session|c_session_redirect)$" "t:none,deny,id:5,status:501,severity:3,msg:'Strict cookieparametercheck: At least one request cookieparameter is not predefined for this path.'"
  # Checking cookieparameter "c_session"
  SecRule &REQUEST_COOKIES:c_session "@eq 0" "t:none,deny,id:5,status:501,severity:3,msg:'Cookieparameter c_session is mandatory, but it is not present in request.'"
  SecRule REQUEST_COOKIES:c_session "!^(\d{8})$" "t:none,deny,id:5,status:501,severity:3,msg:'Cookieparameter c_session failed validity check. Value domain: Custom.'"
  # Checking cookieparameter "c_session_redirect"
  SecRule REQUEST_COOKIES:c_session_redirect "!^(\d{8})$" "t:none,deny,id:5,status:301,redirect:http://www.netnea.com,severity:3,msg:'Cookieparameter c_session_redirect failed validity check. Value domain: Custom.'"

  # Strict querystringparameter-/postparametercheck (make sure the request contains only predefined request querystringparameter-/postparameters)
  SecRule ARGS_NAMES "!^(q_single_integer|p_single_integer)$" "t:none,deny,id:5,status:501,severity:3,msg:'Strict querystringparameter-/postparametercheck: At least one request querystringparameter-/postparameter is not predefined for this path.'"
  # Checking querystringparameter "q_single_integer"
  SecRule REQUEST_BODY "^q_single_integer[=&]|^q_single_integer$" "t:none,deny,id:5,status:501,severity:3,msg:'Querystringparameter q_single_integer is present in post payload. This is illegal.'"
  SecRule ARGS:q_single_integer "!^(\d)$" "t:none,deny,id:5,status:501,severity:3,msg:'Querystringparameter q_single_integer failed validity check. Value domain: Custom.'"

  # Checking postparameter "p_single_integer"
  SecRule QUERY_STRING "^p_single_integer[=&]|^p_single_integer$" "t:none,deny,id:5,status:501,severity:3,msg:'Postparameter p_single_integer is present in query string. This is illegal.'"
  SecRule ARGS:p_single_integer "!^(\d)$" "t:none,deny,id:5,status:501,severity:3,msg:'Postparameter p_single_integer failed validity check. Value domain: Custom.'"

  # skip-destination for http_method GET
  # Strict headercheck (make sure the request contains only predefined request headers)
  SecRule REQUEST_HEADERS_NAMES "!^()$" "t:none,deny,id:6,status:501,severity:3,msg:'Strict headercheck: At least one request header is not predefined for this path.'"

  # Strict cookieparametercheck (make sure the request contains only predefined request cookieparameters)
  SecRule REQUEST_COOKIES_NAMES "!^(c_session_redirect)$" "t:none,deny,id:6,status:501,severity:3,msg:'Strict cookieparametercheck: At least one request cookieparameter is not predefined for this path.'"
  # Checking cookieparameter "c_session_redirect"
  SecRule &REQUEST_COOKIES:c_session_redirect "@eq 0" "t:none,deny,id:6,status:302,redirect:http://remo.netnea.com,severity:3,msg:'Cookieparameter c_session_redirect is mandatory, but it is not present in request.'"
  SecRule REQUEST_COOKIES:c_session_redirect "!^(\d{8})$" "t:none,deny,id:6,status:301,redirect:http://www.netnea.com,severity:3,msg:'Cookieparameter c_session_redirect failed validity check. Value domain: Custom.'"

  # Strict querystringparameter-/postparametercheck (make sure the request contains only predefined request querystringparameter-/postparameters)
  SecRule ARGS_NAMES "!^()$" "t:none,deny,id:6,status:501,severity:3,msg:'Strict querystringparameter-/postparametercheck: At least one request querystringparameter-/postparameter is not predefined for this path.'"


  # All checks passed for this path. Request is allowed.
  SecAction "allow,id:6,t:none,msg:'Request passed all checks, it is thus allowed.'"
</LocationMatch>


  

